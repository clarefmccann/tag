filter(!is.na(session_date),
!is.na(DOB))
## converting to date class
age_all$session_date <- as.Date(age_all$session_date)
View(age_all)
knitr::opts_chunk$set(
echo = TRUE,
message = TRUE,
warning = TRUE
)
## Load required packages ##
packages <-  c("tidyverse", "lavaan",
"reshape2",
"nlme", "lme4",
"data.table", "psych",
"parallel","lubridate",
"mgcv", "ggpubr", "broom", "table1", "ggeffects")
lapply(packages, library, character.only = TRUE)
root_path = "~/Desktop/age_at_each_wave/"
long_doc <- read.csv(paste0(root_path, "long_doc.csv"),
stringsAsFactors = FALSE)
##ace <- read.csv(paste0(root_path, "ACE_Data.csv"),
##stringsAsFactors= FALSE) %>%
##select(TAGID, C_date)
ace <- read.csv(paste0(root_path, "age_ACE.csv"),
stringsAsFactors = FALSE)
dob <- read.csv(paste0(root_path, "TAG_DOB_SessionDates.csv"),
stringsAsFactors = FALSE) %>%
select(TAGID, DOB)
## loading in function to calculate precise age
age_calc <- function(dob, enddate=Sys.Date(), units='months', precise=TRUE){
if (!inherits(dob, "Date") | !inherits(enddate, "Date")) {
stop("Both dob and enddate must be Date class objects")
}
if (any(enddate < dob)) {
stop("End date must be a date after date of birth")
}
start <- as.POSIXlt(dob)
end <- as.POSIXlt(enddate)
if (precise) {
start_is_leap <- ifelse(start$year %% 400 == 0, TRUE,
ifelse(start$year %% 100 == 0, FALSE,
ifelse(start$year %% 4 == 0, TRUE, FALSE)))
end_is_leap <- ifelse(end$year %% 400 == 0, TRUE,
ifelse(end$year %% 100 == 0, FALSE,
ifelse(end$year %% 4 == 0, TRUE, FALSE)))
}
if (units == 'days') {
result <- difftime(end, start, units = 'days')
} else if (units == 'months') {
months <- vapply(mapply(seq, as.POSIXct(start), as.POSIXct(end),
by = 'months', SIMPLIFY = FALSE),
length, FUN.VALUE = length(start)) - 1
# length(seq(start, end, by='month')) - 1
if (precise) {
month_length_end <- ifelse(end$mon == 1 & end_is_leap, 29,
ifelse(end$mon == 1, 28,
ifelse(end$mon %in% c(3, 5, 8, 10),
30, 31)))
month_length_prior <- ifelse((end$mon - 1) == 1 & start_is_leap, 29,
ifelse((end$mon - 1) == 1, 28,
ifelse((end$mon - 1) %in% c(3, 5, 8, 10),
30, 31)))
month_frac <- ifelse(end$mday > start$mday,
(end$mday - start$mday) / month_length_end,
ifelse(end$mday < start$mday,
(month_length_prior - start$mday) /
month_length_prior +
end$mday/month_length_end, 0.0))
result <- months + month_frac
}else{
result <- months
}
} else if (units == 'years') {
years <- vapply(mapply(seq, as.POSIXct(start), as.POSIXct(end),
by = 'years', SIMPLIFY = FALSE),
length, FUN.VALUE = length(start)) - 1
if (precise) {
start_length <- ifelse(start_is_leap, 366, 365)
end_length <- ifelse(end_is_leap, 366, 365)
start_day <- ifelse(start_is_leap & start$yday >= 60,
start$yday - 1,
start$yday)
end_day <- ifelse(end_is_leap & end$yday >= 60,
end$yday - 1,
end$yday)
year_frac <- ifelse(start_day < end_day,
(end_day - start_day)/end_length,
ifelse(start_day > end_day,
(start_length - start_day) / start_length +
end_day / end_length, 0.0))
result <- years + year_frac
}else{
result <- years
}
}else{
stop("Unrecognized units. Please choose years, months, or days.")
}
return(result)
}
ace$session_date <- as.Date(ace$session_date)
## TAG General calulcation
age_all <- full_join(long_doc, dob, by="TAGID") %>%
filter(!is.na(session_date),
!is.na(DOB))
## converting to date class
age_all$session_date <- as.Date(age_all$session_date)
age_all$DOB <- as.Date(age_all$DOB)
## calculating age from DOB & session dates
age_all$age <- age_calc(age_all$DOB, enddate = age_all$session_date, units = "years", precise = TRUE)
## converting ace session dates to date class for merge
ace$session_date <- as.Date(ace$session_date)
## exporting csv of TAG general ages to clean up outside of R
write.csv(age_all, "age.csv")
whole <- full_join(age_all, ace)
whole <- whole %>%
mutate(wave=ifelse(wave=="wave_1_scheduling_arm_1", "W1",
ifelse(wave=="wave_2_scheduling_arm_1","W2",
ifelse(wave=="wave_3_scheduling_arm_1","W3",
ifelse(wave=="wave_4_scheduling_arm_1", "W4",
ifelse(wave=="sos_arm_1","SOS1",
ifelse(wave=="C1","COV1",
wave))))))) %>%
mutate(wave=as.factor(wave))
whole$wave <- factor(whole$wave, levels=c("W1", "W2", "SOS1", "W3", "COV1", "W4"))
num_wave <- whole %>% count(TAGID, sort = TRUE)
w1_age <- whole[whole[, 2] == "W1", ]
write.csv(w1_age, "w1_age.csv")
whole <- full_join(whole, num_wave)
study_design <- whole[order(whole$n, whole$age, whole$TAGID),]
whole <- study_design %>%
mutate(Rank_nr=as.numeric(factor(TAGID,levels=unique(TAGID))))
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
knitr::opts_chunk$set(
echo = TRUE,
message = TRUE,
warning = TRUE
)
## Load required packages ##
packages <-  c("tidyverse", "lavaan",
"reshape2",
"nlme", "lme4",
"data.table", "psych",
"parallel","lubridate",
"mgcv", "ggpubr", "broom", "table1", "ggeffects")
lapply(packages, library, character.only = TRUE)
root_path = "~/Desktop/age_at_each_wave/"
long_doc <- read.csv(paste0(root_path, "long_doc.csv"),
stringsAsFactors = FALSE)
##ace <- read.csv(paste0(root_path, "ACE_Data.csv"),
##stringsAsFactors= FALSE) %>%
##select(TAGID, C_date)
ace <- read.csv(paste0(root_path, "age_ACE.csv"),
stringsAsFactors = FALSE)
dob <- read.csv(paste0(root_path, "TAG_DOB_SessionDates.csv"),
stringsAsFactors = FALSE) %>%
select(TAGID, DOB)
## loading in function to calculate precise age
age_calc <- function(dob, enddate=Sys.Date(), units='months', precise=TRUE){
if (!inherits(dob, "Date") | !inherits(enddate, "Date")) {
stop("Both dob and enddate must be Date class objects")
}
if (any(enddate < dob)) {
stop("End date must be a date after date of birth")
}
start <- as.POSIXlt(dob)
end <- as.POSIXlt(enddate)
if (precise) {
start_is_leap <- ifelse(start$year %% 400 == 0, TRUE,
ifelse(start$year %% 100 == 0, FALSE,
ifelse(start$year %% 4 == 0, TRUE, FALSE)))
end_is_leap <- ifelse(end$year %% 400 == 0, TRUE,
ifelse(end$year %% 100 == 0, FALSE,
ifelse(end$year %% 4 == 0, TRUE, FALSE)))
}
if (units == 'days') {
result <- difftime(end, start, units = 'days')
} else if (units == 'months') {
months <- vapply(mapply(seq, as.POSIXct(start), as.POSIXct(end),
by = 'months', SIMPLIFY = FALSE),
length, FUN.VALUE = length(start)) - 1
# length(seq(start, end, by='month')) - 1
if (precise) {
month_length_end <- ifelse(end$mon == 1 & end_is_leap, 29,
ifelse(end$mon == 1, 28,
ifelse(end$mon %in% c(3, 5, 8, 10),
30, 31)))
month_length_prior <- ifelse((end$mon - 1) == 1 & start_is_leap, 29,
ifelse((end$mon - 1) == 1, 28,
ifelse((end$mon - 1) %in% c(3, 5, 8, 10),
30, 31)))
month_frac <- ifelse(end$mday > start$mday,
(end$mday - start$mday) / month_length_end,
ifelse(end$mday < start$mday,
(month_length_prior - start$mday) /
month_length_prior +
end$mday/month_length_end, 0.0))
result <- months + month_frac
}else{
result <- months
}
} else if (units == 'years') {
years <- vapply(mapply(seq, as.POSIXct(start), as.POSIXct(end),
by = 'years', SIMPLIFY = FALSE),
length, FUN.VALUE = length(start)) - 1
if (precise) {
start_length <- ifelse(start_is_leap, 366, 365)
end_length <- ifelse(end_is_leap, 366, 365)
start_day <- ifelse(start_is_leap & start$yday >= 60,
start$yday - 1,
start$yday)
end_day <- ifelse(end_is_leap & end$yday >= 60,
end$yday - 1,
end$yday)
year_frac <- ifelse(start_day < end_day,
(end_day - start_day)/end_length,
ifelse(start_day > end_day,
(start_length - start_day) / start_length +
end_day / end_length, 0.0))
result <- years + year_frac
}else{
result <- years
}
}else{
stop("Unrecognized units. Please choose years, months, or days.")
}
return(result)
}
ace$session_date <- as.Date(ace$session_date)
## TAG General calulcation
age_all <- full_join(long_doc, dob, by="TAGID") %>%
filter(!is.na(session_date),
!is.na(DOB))
## converting to date class
age_all$session_date <- as.Date(age_all$session_date)
age_all$DOB <- as.Date(age_all$DOB)
## calculating age from DOB & session dates
age_all$age <- age_calc(age_all$DOB, enddate = age_all$session_date, units = "years", precise = TRUE)
## converting ace session dates to date class for merge
ace$session_date <- as.Date(ace$session_date)
## exporting csv of TAG general ages to clean up outside of R
write.csv(age_all, "age.csv")
whole <- full_join(age_all, ace)
whole <- whole %>%
mutate(wave=ifelse(wave=="wave_1_scheduling_arm_1", "W1",
ifelse(wave=="wave_2_scheduling_arm_1","W2",
ifelse(wave=="wave_3_scheduling_arm_1","W3",
ifelse(wave=="wave_4_scheduling_arm_1", "W4",
ifelse(wave=="sos_arm_1","SOS1",
ifelse(wave=="C1","COV1",
wave))))))) %>%
mutate(wave=as.factor(wave))
whole$wave <- factor(whole$wave, levels=c("W1", "W2", "SOS1", "W3", "COV1", "W4"))
study_design <- whole[order(whole$n, whole$age, whole$TAGID),]
study_design <- whole[order(whole$wave, whole$age, whole$TAGID),]
whole <- study_design %>%
mutate(Rank_nr=as.numeric(factor(TAGID,levels=unique(TAGID))))
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
ggsave(filename="tag_study_design.png",
plot=tag_study_design_plot, width=6, height=5, units='in', dpi=300)
## Load required packages ##
packages <-  c("tidyverse", "lavaan",
"reshape2",
"nlme", "lme4",
"data.table", "psych",
"parallel","lubridate",
"mgcv", "ggpubr", "broom", "table1", "ggeffects", "ggrepel")
lapply(packages, library, character.only = TRUE)
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=16, y=168, label = "n= 174")
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=16, y=168, label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10, y=168, label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.4, y=168, label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_minimal()
tag_study_design_plot
install.packages('ggthemes', dependencies = TRUE)
library("ggthemes")
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_solarized_2()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_dark()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_tufte()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_hc()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_wsj()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_economist()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_solarized()
tag_study_design_plot
tag_study_design_plot<- ggplot(whole,
aes(x=age,
y=Rank_nr,
group=TAGID,
col=wave)) +
geom_point(alpha=1) +
geom_line(alpha=.4) +
annotate("text", x=10.5, y=168,size = 4, colour = "#83B692", label = "n= 174") +
theme(axis.text.y = element_blank()) +
scale_color_manual(name= "Wave",
labels = c("W1", "W2", "SOS1", "W3", "COV1", "W4"),
values = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a"))  +
ylab("") +
xlab("Age (years)")+
scale_y_discrete(breaks=NULL) +
theme_solarized_2()
tag_study_design_plot
